server.port=8082

#LOGGING
logging.level.root= INFO

#appender consola
logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=ERROR
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%highlight(%-5level)] [%cyan(%thread)] %magenta(%logger{15}) - %msg%n

#JPA CONFIGURATION

# ---------------------- #
spring.jpa.hibernate.ddl-auto=create
# ---------------------- #

#Explicacion:
#1. ddl-auto implica que cuando se ejecuta la application hace lo que se le indica con la Base de Datos: create - create-drop - update - validate.
#2. spring.jpa.hibernate.ddl-auto=create: Esta propiedad controla el comportamiento de Hibernate en relación con la creación y actualización del esquema de la base de datos. El valor create indica que Hibernate debe crear las tablas y secuencias necesarias cada vez que se inicia la aplicación. Esto es útil durante el desarrollo, pero no es recomendable para entornos de producción debido a que puede resultar en la pérdida de datos existentes. Para entornos de producción, se recomienda usar update o none y gestionar el esquema de la base de datos de manera manual o mediante herramientas de migración como Flyway o Liquibase.

# ---------------------- #
spring.jpa.show-sql=false
# ---------------------- #
#Explicacion:
#spring.jpa.show-sql=true: Esta propiedad habilita la visualización de las consultas SQL generadas por Hibernate en la consola. Es útil para depurar y entender cómo Hibernate está interactuando con la base de datos, pero generalmente se desactiva en entornos de producción para evitar la exposición de información sensible.

# ---------------------- #
spring.jpa.properties.hibernate.format_sql=true
# ---------------------- #
#Explicacion:
#spring.jpa.properties.hibernate.format_sql=true: Esta propiedad, cuando se establece en true, hace que Hibernate formatee las consultas SQL generadas para que sean más legibles. Esto puede ser útil durante el desarrollo para facilitar la lectura de las consultas SQL en la consola, pero no tiene un impacto en el rendimiento de la aplicación.

# ---------------------- #
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# ---------------------- #
#Explicacion:
#org.hibernate.dialect.H2Dialect indica que se está utilizando H2 como sistema de gestión de bases de datos. Es importante seleccionar el dialecto correcto para asegurar que las consultas generadas por Hibernate sean compatibles con la base de datos que estás utilizando.



#DATABASE CONNECTION

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:~/cliDental
spring.datasource.username=dental
spring.datasource.password=dentaldel